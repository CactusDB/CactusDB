/*
Navicat MySQL Data Transfer

Source Server         : Pridefire
Source Server Version : 50500
Source Host           : localhost:3306
Source Database       : world

Target Server Type    : MYSQL
Target Server Version : 50500
File Encoding         : 65001

Date: 2010-12-09 11:30:51
*/

SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `command`
-- ----------------------------
DROP TABLE IF EXISTS `command`;
CREATE TABLE `command` (
  `name` varchar(50) NOT NULL DEFAULT '',
  `security` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `help` longtext,
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED COMMENT='Chat System';

-- ----------------------------
-- Records of command
-- ----------------------------
INSERT INTO `command` VALUES ('account create', '4', 'Syntax: .account create $account $password\r\n\r\nCreate account and set password to it.');
INSERT INTO `command` VALUES ('account delete', '4', 'Syntax: .account delete $account\r\n\r\nDelete account with all characters.');
INSERT INTO `command` VALUES ('account lock', '0', 'Syntax: .account lock [on|off]\r\n\r\nAllow login from account only from current used IP or remove this requirement.');
INSERT INTO `command` VALUES ('account onlinelist', '4', 'Syntax: .account onlinelist\r\n\r\nShow list of online accounts.');
INSERT INTO `command` VALUES ('account password', '0', 'Syntax: .account password $old_password $new_password $new_password\r\n\r\nChange your account password.');
INSERT INTO `command` VALUES ('account set addon', '3', 'Syntax: .account set addon [$account] #addon\r\n\r\nSet user (possible targeted) expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk.');
INSERT INTO `command` VALUES ('account set gmlevel', '4', 'Syntax: .account set gmlevel [$account] #level [#realmid]\r\n\r\nSet the security level for targeted player (can\'t be used at self) or for account $name to a level of #level on the realm #realmID.\r\n\r\n#level may range from 0 to 3.\r\n\r\n#reamID may be -1 for all realms.');
INSERT INTO `command` VALUES ('account set password', '4', 'Syntax: .account set password $account $password $password\r\n\r\nSet password for account.');
INSERT INTO `command` VALUES ('account set', '3', 'Syntax: .account set $subcommand\nType .account set to see the list of possible subcommands or .help account set $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('account', '0', 'Syntax: .account\r\n\r\nDisplay the access level of your account.');
INSERT INTO `command` VALUES ('additem', '3', 'Syntax: .additem #itemid/[#itemname]/#shift-click-item-link #itemcount\r\n\r\nAdds the specified number of items of id #itemid (or exact (!) name $itemname in brackets, or link created by shift-click at item in inventory or recipe) to your or selected character inventory. If #itemcount is omitted, only one item will be added.\r\n.');
INSERT INTO `command` VALUES ('additemset', '3', 'Syntax: .additemset #itemsetid\r\n\r\nAdd items from itemset of id #itemsetid to your or selected character inventory. Will add by one example each item from itemset.');
INSERT INTO `command` VALUES ('announce', '1', 'Syntax: .announce $MessageToBroadcast\r\n\r\nSend a global message to all players online in chat log.');
INSERT INTO `command` VALUES ('aura', '3', 'Syntax: .aura #spellid\r\n\r\nAdd the aura from spell #spellid to the selected Unit.');
INSERT INTO `command` VALUES ('ban account', '3', 'Syntax: .ban account $Name $bantime $reason\r\nBan account kick player.\r\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
INSERT INTO `command` VALUES ('ban character', '3', 'Syntax: .ban character $Name $bantime $reason\nBan character and kick player.\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
INSERT INTO `command` VALUES ('ban ip', '3', 'Syntax: .ban ip $Ip $bantime $reason\r\nBan IP.\r\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
INSERT INTO `command` VALUES ('ban', '3', 'Syntax: .ban $subcommand\nType .ban to see the list of possible subcommands or .help ban $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('baninfo account', '3', 'Syntax: .baninfo account $accountid\r\nWatch full information about a specific ban.');
INSERT INTO `command` VALUES ('baninfo character', '3', 'Syntax: .baninfo character $charactername \r\nWatch full information about a specific ban.');
INSERT INTO `command` VALUES ('baninfo ip', '3', 'Syntax: .baninfo ip $ip\r\nWatch full information about a specific ban.');
INSERT INTO `command` VALUES ('baninfo', '3', 'Syntax: .baninfo $subcommand\nType .baninfo to see the list of possible subcommands or .help baninfo $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('bank', '3', 'Syntax: .bank\r\n\r\nShow your bank inventory.');
INSERT INTO `command` VALUES ('banlist account', '3', 'Syntax: .banlist account [$Name]\r\nSearches the banlist for a account name pattern or show full list account bans.');
INSERT INTO `command` VALUES ('banlist character', '3', 'Syntax: .banlist character $Name\r\nSearches the banlist for a character name pattern. Pattern required.');
INSERT INTO `command` VALUES ('banlist ip', '3', 'Syntax: .banlist ip [$Ip]\r\nSearches the banlist for a IP pattern or show full list of IP bans.');
INSERT INTO `command` VALUES ('banlist', '3', 'Syntax: .banlist $subcommand\nType .banlist to see the list of possible subcommands or .help banlist $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('bindsight', '3', 'Syntax: .bindsight\r\n\r\nBinds vision to the selected unit indefinitely. Cannot be used while currently possessing a target.');
INSERT INTO `command` VALUES ('cast back', '3', 'Syntax: .cast back #spellid [triggered]\r\n  Selected target will cast #spellid to your character. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('cast dist', '3', 'Syntax: .cast dist #spellid [#dist [triggered]]\r\n  You will cast spell to pint at distance #dist. If \'trigered\' or part provided then spell casted with triggered flag. Not all spells can be casted as area spells.');
INSERT INTO `command` VALUES ('cast self', '3', 'Syntax: .cast self #spellid [triggered]\r\nCast #spellid by target at target itself. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('cast target', '3', 'Syntax: .cast target #spellid [triggered]\r\n  Selected target will cast #spellid to his victim. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('cast', '3', 'Syntax: .cast #spellid [triggered]\r\n  Cast #spellid to selected target. If no target selected cast to self. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('character customize', '2', 'Syntax: .character customize [$name]\r\n\r\nMark selected in game or by $name in command character for customize at next login.');
INSERT INTO `command` VALUES ('character erase', '4', 'Syntax: .character erase $name\r\n\r\nDelete character $name. Character finally deleted in case any deleting options.');
INSERT INTO `command` VALUES ('character level', '3', 'Syntax: .character level [$playername] [#level]\r\n\r\nSet the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
INSERT INTO `command` VALUES ('character rename', '2', 'Syntax: .character rename [$name]\r\n\r\nMark selected in game or by $name in command character for rename at next login.');
INSERT INTO `command` VALUES ('character reputation', '2', 'Syntax: .character reputation [$player_name]\r\n\r\nShow reputation information for selected player or player find by $player_name.');
INSERT INTO `command` VALUES ('combatstop', '2', 'Syntax: .combatstop [$playername]\r\nStop combat for selected character. If selected non-player then command applied to self. If $playername provided then attempt applied to online player $playername.');
INSERT INTO `command` VALUES ('cometome', '3', 'SYntax: .cometome $parameter\nMake selected creature come to your current location (new position not saved to DB).');
INSERT INTO `command` VALUES ('commands', '0', 'Syntax: .commands\r\n\r\nDisplay a list of available commands for your account level.');
INSERT INTO `command` VALUES ('cooldown', '3', 'Syntax: .cooldown [#spell_id]\r\n\r\nRemove all (if spell_id not provided) or #spel_id spell cooldown from selected character or you (if no selection).');
INSERT INTO `command` VALUES ('damage', '3', 'Syntax: .damage $damage_amount [$school [$spellid]]\r\n\r\nApply $damage to target. If not $school and $spellid provided then this flat clean melee damage without any modifiers. If $school provided then damage modified by armor reduction (if school physical), and target absorbing modifiers and result applied as melee damage to target. If spell provided then damage modified and applied as spell damage. $spellid can be shift-link.');
INSERT INTO `command` VALUES ('debug arena', '3', 'Syntax: .debug arena\r\n\r\nToggle debug mode for arenas. In debug mode GM can start arena with single player.');
INSERT INTO `command` VALUES ('debug bg', '3', 'Syntax: .debug bg\r\n\r\nToggle debug mode for battlegrounds. In debug mode GM can start battleground with single player.');
INSERT INTO `command` VALUES ('debug Mod32Value', '3', 'Syntax: .debug Mod32Value #field #value\r\n\r\nAdd #value to field #field of your character.');
INSERT INTO `command` VALUES ('debug play cinematic', '1', 'Syntax: .debug play cinematic #cinematicid\r\n\r\nPlay cinematic #cinematicid for you. You stay at place while your mind fly.\r\n');
INSERT INTO `command` VALUES ('debug play movie', '1', 'Syntax: .debug play movie #movieid\r\n\r\nPlay movie #movieid for you.');
INSERT INTO `command` VALUES ('debug play sound', '1', 'Syntax: .debug play sound #soundid\r\n\r\nPlay sound with #soundid.\r\nSound will be play only for you. Other players do not hear this.\r\nWarning: client may have more 5000 sounds...');
INSERT INTO `command` VALUES ('debug', '1', 'Syntax: .debug $subcommand\nType .debug to see the list of possible subcommands or .help debug $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('demorph', '2', 'Syntax: .demorph\r\n\r\nDemorph the selected player.');
INSERT INTO `command` VALUES ('die', '3', 'Syntax: .die\r\n\r\nKill the selected player. If no player is selected, it will kill you.');
INSERT INTO `command` VALUES ('dismount', '0', 'Syntax: .dismount\r\n\r\nDismount you, if you are mounted.');
INSERT INTO `command` VALUES ('distance', '3', 'Syntax: .distance\r\n\r\nDisplay the distance from your character to the selected creature.');
INSERT INTO `command` VALUES ('event activelist', '2', 'Syntax: .event activelist\r\nShow list of currently active events.');
INSERT INTO `command` VALUES ('event start', '2', 'Syntax: .event start #event_id\r\nStart event #event_id. Set start time for event to current moment (change not saved in DB).');
INSERT INTO `command` VALUES ('event stop', '2', 'Syntax: .event stop #event_id\r\nStop event #event_id. Set start time for event to time in past that make current moment is event stop time (change not saved in DB).');
INSERT INTO `command` VALUES ('event', '2', 'Syntax: .event #event_id\r\nShow details about event with #event_id.');
INSERT INTO `command` VALUES ('explorecheat', '3', 'Syntax: .explorecheat #flag\r\n\r\nReveal  or hide all maps for the selected player. If no player is selected, hide or reveal maps to you.\r\n\r\nUse a #flag of value 1 to reveal, use a #flag value of 0 to hide all maps.');
INSERT INTO `command` VALUES ('flusharenapoints', '3', 'Syntax: .flusharenapoints\r\n\r\nUse it to distribute arena points based on arena team ratings, and start a new week.');
INSERT INTO `command` VALUES ('freeze', '1', 'Syntax: .freeze (#player)\r\n\"Freezes\" #player and disables his chat. When using this without #name it will freeze your target.');
INSERT INTO `command` VALUES ('gm chat', '1', 'Syntax: .gm chat [on/off]\r\n\r\nEnable or disable chat GM MODE (show gm badge in messages) or show current state of on/off not provided.');
INSERT INTO `command` VALUES ('gm fly', '3', 'Syntax: .gm fly [on/off]\r\nEnable/disable gm fly mode.');
INSERT INTO `command` VALUES ('gm ingame', '0', 'Syntax: .gm ingame\r\n\r\nDisplay a list of available in game Game Masters.');
INSERT INTO `command` VALUES ('gm list', '3', 'Syntax: .gm list\r\n\r\nDisplay a list of all Game Masters accounts and security levels.');
INSERT INTO `command` VALUES ('gm visible', '1', 'Syntax: .gm visible on/off\r\n\r\nOutput current visibility state or make GM visible(on) and invisible(off) for other players.');
INSERT INTO `command` VALUES ('gm', '1', 'Syntax: .gm [on/off]\r\n\r\nEnable or Disable in game GM MODE or show current state of on/off not provided.');
INSERT INTO `command` VALUES ('gmannounce', '1', 'Syntax: .gmannounce $announcement\r\nSend an announcement to online Gamemasters.');
INSERT INTO `command` VALUES ('gmnameannounce', '1', 'Syntax: .gmnameannounce $announcement.\r\nSend an announcement to all online GM\'s, displaying the name of the sender.');
INSERT INTO `command` VALUES ('gmnotify', '1', 'Syntax: .gmnotify $notification\r\nDisplays a notification on the screen of all online GM\'s.');
INSERT INTO `command` VALUES ('go creature', '1', 'Syntax: .go creature #creature_guid\r\nTeleport your character to creature with guid #creature_guid.\r\n.gocreature #creature_name\r\nTeleport your character to creature with this name.\r\n.gocreature id #creature_id\r\nTeleport your character to a creature that was spawned from the template with this entry.\r\n*If* more than one creature is found, then you are teleported to the first that is found inside the database.');
INSERT INTO `command` VALUES ('go graveyard', '1', 'Syntax: .go graveyard #graveyardId\r\n Teleport to graveyard with the graveyardId specified.');
INSERT INTO `command` VALUES ('go grid', '1', 'Syntax: .go grid #gridX #gridY [#mapId]\r\n\r\nTeleport the gm to center of grid with provided indexes at map #mapId (or current map if it not provided).');
INSERT INTO `command` VALUES ('go object', '1', 'Syntax: .go object #object_guid\r\nTeleport your character to gameobject with guid #object_guid');
INSERT INTO `command` VALUES ('go taxinode', '1', 'Syntax: .go taxinode #taxinode\r\n\r\nTeleport player to taxinode coordinates. You can look up zone using .lookup taxinode $namepart');
INSERT INTO `command` VALUES ('go ticket', '1', 'Syntax: .go ticket #ticketid\r\nTeleports the user to the location where $ticketid was created.');
INSERT INTO `command` VALUES ('go trigger', '1', 'Syntax: .go trigger #trigger_id\r\n\r\nTeleport your character to areatrigger with id #trigger_id. Character will be teleported to trigger target if selected areatrigger is telporting trigger.');
INSERT INTO `command` VALUES ('go xy', '1', 'Syntax: .go xy #x #y [#mapid]\r\n\r\nTeleport player to point with (#x,#y) coordinates at ground(water) level at map #mapid or same map if #mapid not provided.');
INSERT INTO `command` VALUES ('go xyz', '1', 'Syntax: .go xyz #x #y #z [#mapid]\r\n\r\nTeleport player to point with (#x,#y,#z) coordinates at ground(water) level at map #mapid or same map if #mapid not provided.');
INSERT INTO `command` VALUES ('go zonexy', '1', 'Syntax: .go zonexy #x #y [#zone]\r\n\r\nTeleport player to point with (#x,#y) client coordinates at ground(water) level in zone #zoneid or current zone if #zoneid not provided. You can look up zone using .lookup area $namepart');
INSERT INTO `command` VALUES ('go', '1', 'Syntax: .go $subcommand\nType .go to see the list of possible subcommands or .help go $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('gobject activate', '2', 'Syntax: .gobject activate #guid\r\n\r\nActivates an object like a door or a button.');
INSERT INTO `command` VALUES ('gobject add', '2', 'Syntax: .gobject add #id <spawntimeSecs>\r\n\r\nAdd a game object from game object templates to the world at your current location using the #id.\r\nspawntimesecs sets the spawntime, it is optional.\r\n\r\nNote: this is a copy of .gameobject.');
INSERT INTO `command` VALUES ('gobject delete', '2', 'Syntax: .gobject delete #go_guid\r\nDelete gameobject with guid #go_guid.');
INSERT INTO `command` VALUES ('gobject move', '2', 'Syntax: .gobject move #goguid [#x #y #z]\r\n\r\nMove gameobject #goguid to character coordinates (or to (#x,#y,#z) coordinates if its provide).');
INSERT INTO `command` VALUES ('gobject near', '2', 'Syntax: .gobject near  [#distance]\r\n\r\nOutput gameobjects at distance #distance from player. Output gameobject guids and coordinates sorted by distance from character. If #distance not provided use 10 as default value.');
INSERT INTO `command` VALUES ('gobject setphase', '2', 'Syntax: .gobject setphase #guid #phasemask\r\n\r\nGameobject with DB guid #guid phasemask changed to #phasemask with related world vision update for players. Gameobject state saved to DB and persistent.');
INSERT INTO `command` VALUES ('gobject target', '2', 'Syntax: .gobject target [#go_id|#go_name_part]\r\n\r\nLocate and show position nearest gameobject. If #go_id or #go_name_part provide then locate and show position of nearest gameobject with gameobject template id #go_id or name included #go_name_part as part.');
INSERT INTO `command` VALUES ('gobject tempadd', '2', 'Adds a temporary gameobject that is not saved to DB.');
INSERT INTO `command` VALUES ('gobject turn', '2', 'Syntax: .gobject turn #goguid \r\n\r\nSet for gameobject #goguid orientation same as current character orientation.');
INSERT INTO `command` VALUES ('gobject', '2', 'Syntax: .gobject $subcommand\nType .gobject to see the list of possible subcommands or .help gobject $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('summon', '1', 'Syntax: .summon [$charactername]\r\n\r\nTeleport the given character to you. Character can be offline.');
INSERT INTO `command` VALUES ('gps', '1', 'Syntax: .gps [$name|$shift-link]\r\n\r\nDisplay the position information for a selected character or creature (also if player name $name provided then for named player, or if creature/gameobject shift-link provided then pointed creature/gameobject if it loaded). Position information includes X, Y, Z, and orientation, map Id and zone Id');
INSERT INTO `command` VALUES ('groupsummon', '1', 'Syntax: .groupsummon [$charactername]\r\n\r\nTeleport the given character and his group to you. Teleported only online characters but original selected group member can be offline.');
INSERT INTO `command` VALUES ('guid', '2', 'Syntax: .guid\r\n\r\nDisplay the GUID for the selected character.');
INSERT INTO `command` VALUES ('guild create', '2', 'Syntax: .guild create [$GuildLeaderName] \"$GuildName\"\r\n\r\nCreate a guild named $GuildName with the player $GuildLeaderName (or selected) as leader.  Guild name must in quotes.');
INSERT INTO `command` VALUES ('guild delete', '2', 'Syntax: .guild delete \"$GuildName\"\r\n\r\nDelete guild $GuildName. Guild name must in quotes.');
INSERT INTO `command` VALUES ('guild invite', '2', 'Syntax: .guild invite [$CharacterName] \"$GuildName\"\r\n\r\nAdd player $CharacterName (or selected) into a guild $GuildName. Guild name must in quotes.');
INSERT INTO `command` VALUES ('guild rank', '2', 'Syntax: .guild rank [$CharacterName] #Rank\r\n\r\nSet for player $CharacterName (or selected) rank #Rank in a guild.');
INSERT INTO `command` VALUES ('guild uninvite', '2', 'Syntax: .guild uninvite [$CharacterName]\r\n\r\nRemove player $CharacterName (or selected) from a guild.');
INSERT INTO `command` VALUES ('guild', '3', 'Syntax: .guild $subcommand\nType .guild to see the list of possible subcommands or .help guild $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('help', '0', 'Syntax: .help [$command]\r\n\r\nDisplay usage instructions for the given $command. If no $command provided show list available commands.');
INSERT INTO `command` VALUES ('hidearea', '3', 'Syntax: .hidearea #areaid\r\n\r\nHide the area of #areaid to the selected character. If no character is selected, hide this area to you.');
INSERT INTO `command` VALUES ('honor add', '2', 'Syntax: .honor add $amount\r\n\r\nAdd a certain amount of honor (gained today) to the selected player.');
INSERT INTO `command` VALUES ('honor addkill', '2', 'Syntax: .honor addkikll\r\n\r\nAdd the targeted unit as one of your pvp kills today (you only get honor if it\'s a racial leader or a player)');
INSERT INTO `command` VALUES ('honor update', '2', 'Syntax: .honor update\r\n\r\nForce the yesterday\'s honor fields to be updated with today\'s data, which will get reset for the selected player.');
INSERT INTO `command` VALUES ('honor', '2', 'Syntax: .honor $subcommand\nType .honor to see the list of possible subcommands or .help honor $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('hover', '3', 'Syntax: .hover #flag\r\n\r\nEnable or disable hover mode for your character.\r\n\r\nUse a #flag of value 1 to enable, use a #flag value of 0 to disable hover.');
INSERT INTO `command` VALUES ('instance listbinds', '3', 'Syntax: .instance listbinds\r\n  Lists the binds of the selected player.');
INSERT INTO `command` VALUES ('instance savedata', '3', 'Syntax: .instance savedata\r\n  Save the InstanceData for the current player\'s map to the DB.');
INSERT INTO `command` VALUES ('instance stats', '3', 'Syntax: .instance stats\r\n  Shows statistics about instances.');
INSERT INTO `command` VALUES ('instance unbind', '3', 'Syntax: .instance unbind <mapid|all> [difficulty]\r\n  Clear all/some of player\'s binds');
INSERT INTO `command` VALUES ('instance', '3', 'Syntax: .instance $subcommand\nType .instance to see the list of possible subcommands or .help instance $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('itemmove', '2', 'Syntax: .itemmove #sourceslotid #destinationslotid\r\n\r\nMove an item from slots #sourceslotid to #destinationslotid in your inventory\r\n\r\nNot yet implemented');
INSERT INTO `command` VALUES ('kick', '2', 'Syntax: .kick [$charactername] [$reason]\r\n\r\nKick the given character name from the world with or without reason. If no character name is provided then the selected player (except for yourself) will be kicked. If no reason is provided, default is \"No Reason\".');
INSERT INTO `command` VALUES ('learn all', '3', 'Syntax: .learn all\r\n\r\nLearn all big set different spell maybe useful for Administaror.');
INSERT INTO `command` VALUES ('learn all_crafts', '2', 'Syntax: .learn crafts\r\n\r\nLearn all professions and recipes.');
INSERT INTO `command` VALUES ('learn all_default', '1', 'Syntax: .learn all_default [$playername]\r\n\r\nLearn for selected/$playername player all default spells for his race/class and spells rewarded by completed quests.');
INSERT INTO `command` VALUES ('learn all_gm', '2', 'Syntax: .learn all_gm\r\n\r\nLearn all default spells for Game Masters.');
INSERT INTO `command` VALUES ('learn all_lang', '1', 'Syntax: .learn all_lang\r\n\r\nLearn all languages');
INSERT INTO `command` VALUES ('learn all_myclass', '3', 'Syntax: .learn all_myclass\r\n\r\nLearn all spells and talents available for his class.');
INSERT INTO `command` VALUES ('learn all_mypettalents', '3', 'Syntax: .learn all_mypettalents\r\n\r\nLearn all talents for your pet available for his creature type (only for hunter pets).');
INSERT INTO `command` VALUES ('learn all_myspells', '3', 'Syntax: .learn all_myspells\r\n\r\nLearn all spells (except talents and spells with first rank learned as talent) available for his class.');
INSERT INTO `command` VALUES ('learn all_mytalents', '3', 'Syntax: .learn all_mytalents\r\n\r\nLearn all talents (and spells with first rank learned as talent) available for his class.');
INSERT INTO `command` VALUES ('learn all_recipes', '2', 'Syntax: .learn all_recipes [$profession]\r\rLearns all recipes of specified profession and sets skill level to max.\rExample: .learn all_recipes enchanting');
INSERT INTO `command` VALUES ('learn', '3', 'Syntax: .learn #spell [all]\r\n\r\nSelected character learn a spell of id #spell. If \'all\' provided then all ranks learned.');
INSERT INTO `command` VALUES ('levelup', '3', 'Syntax: .levelup [$playername] [#numberoflevels]\r\n\r\nIncrease/decrease the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
INSERT INTO `command` VALUES ('linkgrave', '3', 'Syntax: .linkgrave #graveyard_id [alliance|horde]\r\n\r\nLink current zone to graveyard for any (or alliance/horde faction ghosts). This let character ghost from zone teleport to graveyard after die if graveyard is nearest from linked to zone and accept ghost of this faction. Add only single graveyard at another map and only if no graveyards linked (or planned linked at same map).');
INSERT INTO `command` VALUES ('list auras', '3', 'Syntax: .list auras\nList auras (passive and active) of selected creature or player. If no creature or player is selected, list your own auras.');
INSERT INTO `command` VALUES ('list creature', '3', 'Syntax: .list creature #creature_id [#max_count]\r\n\r\nOutput creatures with creature id #creature_id found in world. Output creature guids and coordinates sorted by distance from character. Will be output maximum #max_count creatures. If #max_count not provided use 10 as default value.');
INSERT INTO `command` VALUES ('list item', '3', 'Syntax: .list item #item_id [#max_count]\r\n\r\nOutput items with item id #item_id found in all character inventories, mails, auctions, and guild banks. Output item guids, item owner guid, owner account and owner name (guild name and guid in case guild bank). Will be output maximum #max_count items. If #max_count not provided use 10 as default value.');
INSERT INTO `command` VALUES ('list object', '3', 'Syntax: .list object #gameobject_id [#max_count]\r\n\r\nOutput gameobjects with gameobject id #gameobject_id found in world. Output gameobject guids and coordinates sorted by distance from character. Will be output maximum #max_count gameobject. If #max_count not provided use 10 as default value.');
INSERT INTO `command` VALUES ('list', '3', 'Syntax: .list $subcommand\nType .list to see the list of possible subcommands or .help list $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('listfreeze', '1', 'Syntax: .listfreeze\r\n\r\nSearch and output all frozen players.');
INSERT INTO `command` VALUES ('loadpath', '3', 'Syntax: .loadpath $pathid\nLoad path changes ingame - IMPORTANT: must be applied first for new paths before .path load #pathid ');
INSERT INTO `command` VALUES ('reload spell_group', '3', 'Syntax: .reload spell_group\nReload spell_group table.');
INSERT INTO `command` VALUES ('lookup area', '1', 'Syntax: .lookup area $namepart\r\n\r\nLooks up an area by $namepart, and returns all matches with their area ID\'s.');
INSERT INTO `command` VALUES ('lookup creature', '3', 'Syntax: .lookup creature $namepart\r\n\r\nLooks up a creature by $namepart, and returns all matches with their creature ID\'s.');
INSERT INTO `command` VALUES ('lookup event', '2', 'Syntax: .lookup event $name\r\nAttempts to find the ID of the event with the provided $name.');
INSERT INTO `command` VALUES ('lookup faction', '3', 'Syntax: .lookup faction $name\r\nAttempts to find the ID of the faction with the provided $name.');
INSERT INTO `command` VALUES ('lookup item', '3', 'Syntax: .lookup item $itemname\r\n\r\nLooks up an item by $itemname, and returns all matches with their Item ID\'s.');
INSERT INTO `command` VALUES ('lookup itemset', '3', 'Syntax: .lookup itemset $itemname\r\n\r\nLooks up an item set by $itemname, and returns all matches with their Item set ID\'s.');
INSERT INTO `command` VALUES ('lookup map', '3', 'Syntax: .lookup map $namepart\r\n\r\nLooks up a map by $namepart, and returns all matches with their map ID\'s.');
INSERT INTO `command` VALUES ('lookup object', '3', 'Syntax: .lookup object $objname\r\n\r\nLooks up an gameobject by $objname, and returns all matches with their Gameobject ID\'s.');
INSERT INTO `command` VALUES ('lookup player account', '2', 'Syntax: .lookup player account $account ($limit) \r\n\r\n Searchs players, which account username is $account with optional parametr $limit of results.');
INSERT INTO `command` VALUES ('lookup player email', '2', 'Syntax: .lookup player email $email ($limit) \r\n\r\n Searchs players, which account email is $email with optional parametr $limit of results.');
INSERT INTO `command` VALUES ('lookup player ip', '2', 'Syntax: .lookup player ip $ip ($limit) \r\n\r\n Searchs players, which account ast_ip is $ip with optional parametr $limit of results.');
INSERT INTO `command` VALUES ('lookup quest', '3', 'Syntax: .lookup quest $namepart\r\n\r\nLooks up a quest by $namepart, and returns all matches with their quest ID\'s.');
INSERT INTO `command` VALUES ('lookup skill', '3', 'Syntax: .lookup skill $$namepart\r\n\r\nLooks up a skill by $namepart, and returns all matches with their skill ID\'s.');
INSERT INTO `command` VALUES ('lookup spell', '3', 'Syntax: .lookup spell $namepart\r\n\r\nLooks up a spell by $namepart, and returns all matches with their spell ID\'s.');
INSERT INTO `command` VALUES ('lookup taxinode', '3', 'Syntax: .lookup taxinode $substring\r\n\r\nSearch and output all taxinodes with provide $substring in name.');
INSERT INTO `command` VALUES ('lookup tele', '1', 'Syntax: .lookup tele $substring\r\n\r\nSearch and output all .tele command locations with provide $substring in name.');
INSERT INTO `command` VALUES ('lookup', '3', 'Syntax: .lookup $subcommand\nType .lookup to see the list of possible subcommands or .help lookup $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('maxskill', '3', 'Syntax: .maxskill\r\nSets all skills of the targeted player to their maximum values for its current level.');
INSERT INTO `command` VALUES ('modify arena', '1', 'Syntax: .modify arena #value\r\nAdd $amount arena points to the selected player.');
INSERT INTO `command` VALUES ('modify aspeed', '1', 'Syntax: .modify aspeed #rate\r\n\r\nModify all speeds -run,swim,run back,swim back- of the selected player to \"normalbase speed for this move type\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('modify bit', '1', 'Syntax: .modify bit #field #bit\r\n\r\nToggle the #bit bit of the #field field for the selected player. If no player is selected, modify your character.');
INSERT INTO `command` VALUES ('modify bwalk', '1', 'Syntax: .modify bwalk #rate\r\n\r\nModify the speed of the selected player while running backwards to \"normal walk back speed\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('modify drunk', '1', 'Syntax: .modify drunk #value\r\n Set drunk level to #value (0..100). Value 0 remove drunk state, 100 is max drunked state.');
INSERT INTO `command` VALUES ('modify energy', '1', 'Syntax: .modify energy #energy\r\n\r\nModify the energy of the selected player. If no player is selected, modify your energy.');
INSERT INTO `command` VALUES ('modify faction', '1', 'Syntax: .modify faction #factionid #flagid #npcflagid #dynamicflagid\r\n\r\nModify the faction and flags of the selected creature. Without arguments, display the faction and flags of the selected creature.');
INSERT INTO `command` VALUES ('modify fly', '1', '.modify fly $parameter\nModify the flying speed of the selected player to \"normal flying speed\"*rate. If no player is selected, modify your speed.\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('modify gender', '2', 'Syntax: .modify gender male/female\r\n\r\nChange gender of selected player.');
INSERT INTO `command` VALUES ('modify honor', '1', 'Syntax: .modify honor $amount\r\n\r\nAdd $amount honor points to the selected player.');
INSERT INTO `command` VALUES ('modify hp', '1', 'Syntax: .modify hp #newhp\r\n\r\nModify the hp of the selected player. If no player is selected, modify your hp.');
INSERT INTO `command` VALUES ('modify mana', '1', 'Syntax: .modify mana #newmana\r\n\r\nModify the mana of the selected player. If no player is selected, modify your mana.');
INSERT INTO `command` VALUES ('modify money', '1', 'Syntax: .modify money #money\r\n.money #money\r\n\r\nAdd or remove money to the selected player. If no player is selected, modify your money.\r\n\r\n #gold can be negative to remove money.');
INSERT INTO `command` VALUES ('modify morph', '2', 'Syntax: .modify morph #displayid\r\n\r\nChange your current model id to #displayid.');
INSERT INTO `command` VALUES ('modify mount', '1', 'Syntax: .modify mount #id #speed\r\nDisplay selected player as mounted at #id creature and set speed to #speed value.');
INSERT INTO `command` VALUES ('modify phase', '3', 'Syntax: .modify phase #phasemask\r\n\r\nSelected character phasemask changed to #phasemask with related world vision update. Change active until in game phase changed, or GM-mode enable/disable, or re-login. Character pts pasemask update to same value.');
INSERT INTO `command` VALUES ('modify rage', '1', 'Syntax: .modify rage #newrage\r\n\r\nModify the rage of the selected player. If no player is selected, modify your rage.');
INSERT INTO `command` VALUES ('modify rep', '2', 'Syntax: .modify rep #repId (#repvalue | $rankname [#delta])\r\nSets the selected players reputation with faction #repId to #repvalue or to $reprank.\r\nIf the reputation rank name is provided, the resulting reputation will be the lowest reputation for that rank plus the delta amount, if specified.\r\nYou can use \'.pinfo rep\' to list all known reputation ids, or use \'.lookup faction $name\' to locate a specific faction id.');
INSERT INTO `command` VALUES ('modify runicpower', '1', 'Syntax: .modify runicpower #newrunicpower\r\n\r\nModify the runic power of the selected player. If no player is selected, modify your runic power.');
INSERT INTO `command` VALUES ('modify scale', '1', '.modify scale $parameter\nModify size of the selected player to \"normal scale\"*rate. If no player is selected, modify your size.\n#rate may range from 0.1 to 10.');
INSERT INTO `command` VALUES ('modify speed', '1', 'Syntax: .modify speed #rate\r\n.speed #rate\r\n\r\nModify the running speed of the selected player to \"normal base run speed\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('modify spell', '1', 'TODO');
INSERT INTO `command` VALUES ('modify standstate', '2', 'Syntax: .modify standstate #emoteid\r\n\r\nChange the emote of your character while standing to #emoteid.');
INSERT INTO `command` VALUES ('modify swim', '1', 'Syntax: .modify swim #rate\r\n\r\nModify the swim speed of the selected player to \"normal swim speed\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('character titles', '2', 'Syntax: .character titles [$player_name]\r\n\r\nShow known titles list for selected player or player find by $player_name.');
INSERT INTO `command` VALUES ('modify tp', '1', 'Syntax: .modify tp #amount\r\n\r\nSet free talent pointes for selected character or character\'s pet. It will be reset to default expected at next levelup/login/quest reward.');
INSERT INTO `command` VALUES ('modify', '1', 'Syntax: .modify $subcommand\nType .modify to see the list of possible subcommands or .help modify $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('movegens', '3', 'Syntax: .movegens\r\n  Show movement generators stack for selected creature or player.');
INSERT INTO `command` VALUES ('mute', '1', 'Syntax: .mute [$playerName] $timeInMinutes [$reason]\r\n\r\nDisible chat messaging for any character from account of character $playerName (or currently selected) at $timeInMinutes minutes. Player can be offline.');
INSERT INTO `command` VALUES ('nameannounce', '1', 'Syntax: .nameannounce $announcement.\nSend an announcement to all online players, displaying the name of the sender.');
INSERT INTO `command` VALUES ('appear', '1', 'Syntax: .appear [$charactername]\r\n\r\nTeleport to the given character. Either specify the character name or click on the character\'s portrait,e.g. when you are in a group. Character can be offline.');
INSERT INTO `command` VALUES ('neargrave', '3', 'Syntax: .neargrave [alliance|horde]\r\n\r\nFind nearest graveyard linked to zone (or only nearest from accepts alliance or horde faction ghosts).');
INSERT INTO `command` VALUES ('notify', '1', 'Syntax: .notify $MessageToBroadcast\r\n\r\nSend a global message to all players online in screen.');
INSERT INTO `command` VALUES ('npc add', '2', 'Syntax: .npc add #creatureid\r\n\r\nSpawn a creature by the given template id of #creatureid.');
INSERT INTO `command` VALUES ('npc addformation', '1', 'Syntax: .npc addformation $leader\nAdd selected creature to a leader\'s formation.');
INSERT INTO `command` VALUES ('npc additem', '2', 'Syntax: .npc additem #itemId <#maxcount><#incrtime><#extendedcost>r\r\n\r\nAdd item #itemid to item list of selected vendor. Also optionally set max count item in vendor item list and time to item count restoring and items ExtendedCost.');
INSERT INTO `command` VALUES ('npc addmove', '2', 'Syntax: .npc addmove #creature_guid [#waittime]\r\n\r\nAdd your current location as a waypoint for creature with guid #creature_guid. And optional add wait time.');
INSERT INTO `command` VALUES ('npc allowmove', '3', 'Syntax: .npc allowmove\r\n\r\nEnable or disable movement creatures in world. Not implemented.');
INSERT INTO `command` VALUES ('npc changeentry', '3', 'Syntax: .npc changeentry $entry\nSwitch selected creature with another entry from creature_template. - New creature.id value not saved to DB.');
INSERT INTO `command` VALUES ('npc changelevel', '2', 'Syntax: .npc changelevel #level\r\n\r\nChange the level of the selected creature to #level.\r\n\r\n#level may range from 1 to 63.');
INSERT INTO `command` VALUES ('npc delete', '2', 'Syntax: .npc delete [#guid]\r\n\r\nDelete creature with guid #guid (or the selected if no guid is provided)');
INSERT INTO `command` VALUES ('npc delitem', '2', 'Syntax: .npc delitem #itemId\r\n\r\nRemove item #itemid from item list of selected vendor.');
INSERT INTO `command` VALUES ('npc factionid', '2', 'Syntax: .npc factionid #factionid\r\n\r\nSet the faction of the selected creature to #factionid.');
INSERT INTO `command` VALUES ('npc flag', '2', 'Syntax: .npc flag #npcflag\r\n\r\nSet the NPC flags of creature template of the selected creature and selected creature to #npcflag. NPC flags will applied to all creatures of selected creature template after server restart or grid unload/load.');
INSERT INTO `command` VALUES ('npc follow', '2', 'Syntax: .npc follow\r\n\r\nSelected creature start follow you until death/fight/etc.');
INSERT INTO `command` VALUES ('npc info', '3', 'Syntax: .npc info\r\n\r\nDisplay a list of details for the selected creature.\r\n\r\nThe list includes:\r\n- GUID, Faction, NPC flags, Entry ID, Model ID,\r\n- Level,\r\n- Health (current/maximum),\r\n\r\n- Field flags, dynamic flags, faction template, \r\n- Position information,\r\n- and the creature type, e.g. if the creature is a vendor.');
INSERT INTO `command` VALUES ('npc move', '2', 'Syntax: .npc move [#creature_guid]\r\n\r\nMove the targeted creature spawn point to your coordinates.');
INSERT INTO `command` VALUES ('npc playemote', '3', 'Syntax: .npc playemote #emoteid\r\n\r\nMake the selected creature emote with an emote of id #emoteid.');
INSERT INTO `command` VALUES ('npc say', '1', 'Syntax: .npc say $message\nMake selected creature say specified message.');
INSERT INTO `command` VALUES ('npc setdeathstate', '2', 'Syntax: .npc setdeathstate on/off\r\n\r\nSet default death state (dead/alive) for npc at spawn.');
INSERT INTO `command` VALUES ('npc setlink', '2', 'Syntax: .npc setlink $creatureGUID\r\n\r\nLinks respawn of selected creature to the condition that $creatureGUID defined is alive.');
INSERT INTO `command` VALUES ('npc setmodel', '2', 'Syntax: .npc setmodel #displayid\r\n\r\nChange the model id of the selected creature to #displayid.');
INSERT INTO `command` VALUES ('npc setmovetype', '2', 'Syntax: .npc setmovetype [#creature_guid] stay/random/way [NODEL]\r\n\r\nSet for creature pointed by #creature_guid (or selected if #creature_guid not provided) movement type and move it to respawn position (if creature alive). Any existing waypoints for creature will be removed from the database if you do not use NODEL. If the creature is dead then movement type will applied at creature respawn.\r\nMake sure you use NODEL, if you want to keep the waypoints.');
INSERT INTO `command` VALUES ('npc setphase', '2', 'Syntax: .npc setphase #phasemask\r\n\r\nSelected unit or pet phasemask changed to #phasemask with related world vision update for players. In creature case state saved to DB and persistent. In pet case change active until in game phase changed for owner, owner re-login, or GM-mode enable/disable..');
INSERT INTO `command` VALUES ('npc spawndist', '2', 'Syntax: .npc spawndist #dist\r\n\r\nAdjust spawndistance of selected creature to dist.');
INSERT INTO `command` VALUES ('npc spawntime', '2', 'Syntax: .npc spawntime #time \r\n\r\nAdjust spawntime of selected creature to time.');
INSERT INTO `command` VALUES ('npc tempadd', '2', 'Adds temporary NPC, not saved to database.');
INSERT INTO `command` VALUES ('npc textemote', '1', 'Syntax: .npc textemote #emoteid\r\n\r\nMake the selected creature to do textemote with an emote of id #emoteid.');
INSERT INTO `command` VALUES ('npc unfollow', '2', 'Syntax: .npc unfollow\r\n\r\nSelected creature (non pet) stop follow you.');
INSERT INTO `command` VALUES ('npc whisper', '1', 'Syntax: .npc whisper #playerguid #text\r\nMake the selected npc whisper #text to  #playerguid.');
INSERT INTO `command` VALUES ('npc yell', '1', 'Syntax: .npc yell $message\nMake selected creature yell specified message.');
INSERT INTO `command` VALUES ('npc', '1', 'Syntax: .npc $subcommand\nType .npc to see the list of possible subcommands or .help npc $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('pdump load', '3', 'Syntax: .pdump load $filename $account [$newname] [$newguid]\r\nLoad character dump from dump file into character list of $account with saved or $newname, with saved (or first free) or $newguid guid.');
INSERT INTO `command` VALUES ('pdump write', '3', 'Syntax: .pdump write $filename $playerNameOrGUID\r\nWrite character dump with name/guid $playerNameOrGUID to file $filename.');
INSERT INTO `command` VALUES ('pdump', '3', 'Syntax: .pdump $subcommand\nType .pdump to see the list of possible subcommands or .help pdump $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('pet create', '2', 'Syntax: .pet create\r\n\r\nCreates a pet of the selected creature.');
INSERT INTO `command` VALUES ('pet learn', '2', 'Syntax: .pet learn\r\n\r\nLearn #spellid to pet.');
INSERT INTO `command` VALUES ('pet tp', '2', 'Syntax: .pet tp #\r\n\r\nChange pet\'s amount of training points.');
INSERT INTO `command` VALUES ('pet unlearn', '2', 'Syntax: .pet unlean\r\n\r\nunLearn #spellid to pet.');
INSERT INTO `command` VALUES ('pet', '2', 'Syntax: .pet $subcommand\nType .pet to see the list of possible subcommands or .help pet $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('pinfo', '2', 'Syntax: .pinfo [$player_name]\r\n\r\nOutput account information for selected player or player find by $player_name.');
INSERT INTO `command` VALUES ('playall', '2', 'Syntax: .playall #soundid\r\n\r\nPlayer a sound to whole server.');
INSERT INTO `command` VALUES ('possess', '3', 'Syntax: .possess\r\n\r\nPossesses indefinitely the selected creature.');
INSERT INTO `command` VALUES ('quest add', '3', 'Syntax: .quest add #quest_id\r\n\r\nAdd to character quest log quest #quest_id. Quest started from item can\'t be added by this command but correct .additem call provided in command output.');
INSERT INTO `command` VALUES ('quest complete', '3', 'Syntax: .quest complete #questid\r\nMark all quest objectives as completed for target character active quest. After this target character can go and get quest reward.');
INSERT INTO `command` VALUES ('quest remove', '3', 'Syntax: .quest remove #quest_id\r\n\r\nSet quest #quest_id state to not completed and not active (and remove from active quest list) for selected player.');
INSERT INTO `command` VALUES ('quest', '3', 'Syntax: .quest $subcommand\nType .quest to see the list of possible subcommands or .help quest $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('recall', '1', 'Syntax: .recall [$playername]\r\n\r\nTeleport $playername or selected player to the place where he has been before last use of a teleportation command. If no $playername is entered and no player is selected, it will teleport you.');
INSERT INTO `command` VALUES ('reload all', '3', 'Syntax: .reload all\r\n\r\nReload all tables with reload support added and that can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all_item', '3', 'Syntax: .reload all_item\nReload page_text, item_enchantment_table tables.');
INSERT INTO `command` VALUES ('reload all_locales', '3', 'Syntax: .reload all_locales\r\n\r\nReload all `locales_*` tables with reload support added and that can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all_loot', '3', 'Syntax: .reload all_loot\r\n\r\nReload all `*_loot_template` tables. This can be slow operation with lags for server run.');
INSERT INTO `command` VALUES ('reload all_npc', '3', 'Syntax: .reload all_npc\nReload npc_gossip, npc_option, npc_trainer, npc vendor, points of interest tables.');
INSERT INTO `command` VALUES ('reload all_quest', '3', 'Syntax: .reload all_quest\r\n\r\nReload all quest related tables if reload support added for this table and this table can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all_scripts', '3', 'Syntax: .reload all_scripts\nReload gameobject_scripts, event_scripts, quest_end_scripts, quest_start_scripts, spell_scripts, db_script_string, waypoint_scripts tables.');
INSERT INTO `command` VALUES ('reload all_spell', '3', 'Syntax: .reload all\r\n\r\nReload all `spell_*` tables with reload support added and that can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload areatrigger_involvedrelation', '3', 'Syntax: .reload areatrigger_involvedrelation\nReload areatrigger_involvedrelation table.');
INSERT INTO `command` VALUES ('reload areatrigger_tavern', '3', 'Syntax: .reload areatrigger_tavern\nReload areatrigger_tavern table.');
INSERT INTO `command` VALUES ('reload areatrigger_teleport', '3', 'Syntax: .reload areatrigger_teleport\nReload areatrigger_teleport table.');
INSERT INTO `command` VALUES ('reload autobroadcast', '3', 'Syntax: .reload autobroadcast\nReload autobroadcast table.');
INSERT INTO `command` VALUES ('reload command', '3', 'Syntax: .reload command\nReload command table.');
INSERT INTO `command` VALUES ('reload config', '3', 'Syntax: .reload config\r\n\r\nReload config settings (by default stored in trinityd.conf). Not all settings can be change at reload: some new setting values will be ignored until restart, some values will applied with delay or only to new objects/maps, some values will explicitly rejected to change at reload.');
INSERT INTO `command` VALUES ('reload creature_involvedrelation', '3', 'Syntax: .reload creature_involvedrelation\nReload creature_involvedrelation table.');
INSERT INTO `command` VALUES ('reload creature_linked_respawn', '2', 'Syntax: .reload creature_linked_respawn\r\nReload creature_linked_respawn table.');
INSERT INTO `command` VALUES ('reload creature_loot_template', '3', 'Syntax: .reload creature_loot_template\nReload creature_loot_template table.');
INSERT INTO `command` VALUES ('reload creature_questrelation', '3', 'Syntax: .reload creature_questrelation\nReload creature_questrelation table.');
INSERT INTO `command` VALUES ('reload disenchant_loot_template', '3', 'Syntax: .reload disenchant_loot_template\nReload disenchant_loot_template table.');
INSERT INTO `command` VALUES ('reload event_scripts', '3', 'Syntax: .reload event_scripts\nReload event_scripts table.');
INSERT INTO `command` VALUES ('reload fishing_loot_template', '3', 'Syntax: .reload fishing_loot_template\nReload fishing_loot_template table.');
INSERT INTO `command` VALUES ('reload game_graveyard_zone', '3', 'Syntax: .reload game_graveyard_zone\nReload game_graveyard_zone table.');
INSERT INTO `command` VALUES ('reload game_tele', '3', 'Syntax: .reload game_tele\nReload game_tele table.');
INSERT INTO `command` VALUES ('reload gameobject_involvedrelation', '3', 'Syntax: .reload gameobject_involvedrelation\nReload gameobject_involvedrelation table.');
INSERT INTO `command` VALUES ('reload gameobject_loot_template', '3', 'Syntax: .reload gameobject_loot_template\nReload gameobject_loot_template table.');
INSERT INTO `command` VALUES ('reload gameobject_questrelation', '3', 'Syntax: .reload gameobject_questrelation\nReload gameobject_questrelation table.');
INSERT INTO `command` VALUES ('reload gameobject_scripts', '3', 'Syntax: .reload gameobject_scripts\nReload gameobject_scripts table.');
INSERT INTO `command` VALUES ('reload gm_tickets', '3', 'Syntax: .reload gm_tickets\nReload gm_tickets table.');
INSERT INTO `command` VALUES ('reload item_enchantment_template', '3', 'Syntax: .reload item_enchantment_template\nReload item_enchantment_template table.');
INSERT INTO `command` VALUES ('reload item_loot_template', '3', 'Syntax: .reload item_loot_template\nReload item_loot_template table.');
INSERT INTO `command` VALUES ('reload locales_creature', '3', 'Syntax: .reload locales_creature\nReload locales_creature table.');
INSERT INTO `command` VALUES ('reload locales_gameobject', '3', 'Syntax: .reload locales_gameobject\nReload locales_gameobject table.');
INSERT INTO `command` VALUES ('reload locales_item', '3', 'Syntax: .reload locales_item\nReload locales_item table.');
INSERT INTO `command` VALUES ('reload locales_npc_text', '3', 'Syntax: .reload locales_npc_text\nReload locales_npc_text table.');
INSERT INTO `command` VALUES ('reload locales_page_text', '3', 'Syntax: .reload locales_page_text\nReload locales_page_text table.');
INSERT INTO `command` VALUES ('reload locales_points_of_interest', '3', 'Syntax: .reload locales_points_of_interest\nReload locales_point_of_interest table.');
INSERT INTO `command` VALUES ('reload locales_quest', '3', 'Syntax: .reload locales_quest\nReload locales_quest table.');
INSERT INTO `command` VALUES ('reload milling_loot_template', '3', 'Syntax: .reload milling_loot_template\nReload milling_loot_template table.');
INSERT INTO `command` VALUES ('reload npc_gossip', '3', 'Syntax: .reload npc_gossip\nReload npc_gossip table.');
INSERT INTO `command` VALUES ('reload npc_trainer', '3', 'Syntax: .reload npc_trainer\nReload npc_trainer table.');
INSERT INTO `command` VALUES ('reload npc_vendor', '3', 'Syntax: .reload npc_vendor\nReload npc_vendor table.');
INSERT INTO `command` VALUES ('reload page_text', '3', 'Syntax: .reload page_text\nReload page_text table.');
INSERT INTO `command` VALUES ('reload pickpocketing_loot_template', '3', 'Syntax: .reload pickpocketing_loot_template\nReload pickpocketing_loot_template table.');
INSERT INTO `command` VALUES ('reload points_of_interest', '3', 'Syntax: .reload points_of_interest\nReload points_of_interest table.');
INSERT INTO `command` VALUES ('reload prospecting_loot_template', '3', 'Syntax: .reload prospecting_loot_template\nReload prospecting_loot_template table.');
INSERT INTO `command` VALUES ('reload quest_end_scripts', '3', 'Syntax: .reload quest_end_scripts\nReload quest_end_scripts table.');
INSERT INTO `command` VALUES ('reload mail_loot_template', '3', 'Syntax: .reload quest_mail_loot_template\nReload quest_mail_loot_template table.');
INSERT INTO `command` VALUES ('reload quest_start_scripts', '3', 'Syntax: .reload quest_start_scripts\nReload quest_start_scripts table.');
INSERT INTO `command` VALUES ('reload quest_template', '3', 'Syntax: .reload quest_template\nReload quest_template table.');
INSERT INTO `command` VALUES ('reload reference_loot_template', '3', 'Syntax: .reload reference_loot_template\nReload reference_loot_template table.');
INSERT INTO `command` VALUES ('reload reserved_name', '3', 'Syntax: .reload reserved_name\nReload reserved_name table.');
INSERT INTO `command` VALUES ('reload skill_discovery_template', '3', 'Syntax: .reload skill_discovery_template\nReload skill_discovery_template table.');
INSERT INTO `command` VALUES ('reload skill_extra_item_template', '3', 'Syntax: .reload skill_extra_item_template\nReload skill_extra_item_template table.');
INSERT INTO `command` VALUES ('reload skill_fishing_base_level', '3', 'Syntax: .reload skill_fishing_base_level\nReload skill_fishing_base_level table.');
INSERT INTO `command` VALUES ('reload skinning_loot_template', '3', 'Syntax: .reload skinning_loot_template\nReload skinning_loot_template table.');
INSERT INTO `command` VALUES ('reload spell_area', '3', 'Syntax: .reload spell_area\nReload spell_area table.');
INSERT INTO `command` VALUES ('reload spell_bonus_data', '3', 'Syntax: .reload spell_bonus_data\nReload spell_bonus_data table.');
INSERT INTO `command` VALUES ('reload disables', '3', 'Syntax: .reload disables\r\nReload disables table.');
INSERT INTO `command` VALUES ('reload spell_group_stack_rules', '3', 'Syntax: .reload spell_group\nReload spell_group_stack_rules table.');
INSERT INTO `command` VALUES ('reload spell_learn_spell', '3', 'Syntax: .reload spell_learn_spell\nReload spell_learn_spell table.');
INSERT INTO `command` VALUES ('reload spell_linked_spell', '3', 'Usage: .reload spell_linked_spell\r\nReloads the spell_linked_spell DB table.');
INSERT INTO `command` VALUES ('reload spell_loot_template', '3', 'Syntax: .reload spell_loot_template\nReload spell_loot_template table.');
INSERT INTO `command` VALUES ('reload spell_pet_auras', '3', 'Syntax: .reload spell_pet_auras\nReload spell_pet_auras table.');
INSERT INTO `command` VALUES ('reload spell_proc_event', '3', 'Syntax: .reload spell_proc_event\nReload spell_proc_event table.');
INSERT INTO `command` VALUES ('reload spell_required', '3', 'Syntax: .reload spell_required\nReload spell_required table.');
INSERT INTO `command` VALUES ('reload item_set_names', '3', 'Syntax: .reload item_set_names\nReload item_set_names table.');
INSERT INTO `command` VALUES ('reload spell_scripts', '3', 'Syntax: .reload spell_scripts\nReload spell_scripts table.');
INSERT INTO `command` VALUES ('reload spell_target_position', '3', 'Syntax: .reload spell_target_position\nReload spell_target_position table.');
INSERT INTO `command` VALUES ('reload spell_threats', '3', 'Syntax: .reload spell_threats\nReload spell_threats table.');
INSERT INTO `command` VALUES ('reload trinity_string', '3', 'Syntax: .reload trinity_string\nReload trinity_string table.');
INSERT INTO `command` VALUES ('reload waypoint_scripts', '3', 'Syntax: .reload waypoint_scripts\nReload waypoint_scripts table.');
INSERT INTO `command` VALUES ('reload', '3', 'Syntax: .reload $subcommand\nType .reload to see the list of possible subcommands or .help reload $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('repairitems', '2', 'Syntax: .repairitems\r\n\r\nRepair all selected player\'s items.');
INSERT INTO `command` VALUES ('reset achievements', '3', 'Syntax: .reset achievements [$playername]\r\n\r\nReset achievements data for selected or named (online or offline) character. Achievements for persistance progress data like completed quests/etc re-filled at reset. Achievements for events like kills/casts/etc will lost.');
INSERT INTO `command` VALUES ('reset all', '3', 'Syntax: .reset all spells\r\n\r\nSyntax: .reset all talents\r\n\r\nRequest reset spells or talents (including talents for all character\'s pets if any) at next login each existed character.');
INSERT INTO `command` VALUES ('reset honor', '3', 'Syntax: .reset honor [Playername]\r\n  Reset all honor data for targeted character.');
INSERT INTO `command` VALUES ('reset level', '3', 'Syntax: .reset level [Playername]\r\n  Reset level to 1 including reset stats and talents.  Equipped items with greater level requirement can be lost.');
INSERT INTO `command` VALUES ('reset spells', '3', 'Syntax: .reset spells [Playername]\r\n  Removes all non-original spells from spellbook.\r\n. Playername can be name of offline character.');
INSERT INTO `command` VALUES ('reset stats', '3', 'Syntax: .reset stats [Playername]\r\n  Resets(recalculate) all stats of the targeted player to their original VALUESat current level.');
INSERT INTO `command` VALUES ('reset talents', '3', 'Syntax: .reset talents [Playername]\r\n  Removes all talents of the targeted player or pet or named player. Playername can be name of offline character. With player talents also will be reset talents for all character\'s pets if any.');
INSERT INTO `command` VALUES ('reset', '3', 'Syntax: .reset $subcommand\nType .reset to see the list of possible subcommands or .help reset $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('respawn', '3', 'Syntax: .respawn\r\n\r\nRespawn all nearest creatures and GO without waiting respawn time expiration.');
INSERT INTO `command` VALUES ('revive', '3', 'Syntax: .revive\r\n\r\nRevive the selected player. If no player is selected, it will revive you.');
INSERT INTO `command` VALUES ('save', '0', 'Syntax: .save\r\n\r\nSaves your character.');
INSERT INTO `command` VALUES ('saveall', '1', 'Syntax: .saveall\r\n\r\nSave all characters in game.');
INSERT INTO `command` VALUES ('send items', '3', 'Syntax: .send items #playername \"#subject\" \"#text\" itemid1[:count1] itemid2[:count2] ... itemidN[:countN]\r\n\r\nSend a mail to a player. Subject and mail text must be in \"\". If for itemid not provided related count values then expected 1, if count > max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12.');
INSERT INTO `command` VALUES ('send mail', '1', 'Syntax: .send mail #playername \"#subject\" \"#text\"\r\n\r\nSend a mail to a player. Subject and mail text must be in \"\".');
INSERT INTO `command` VALUES ('send message', '3', 'Syntax: .send message $playername $message\r\n\r\nSend screen message to player from ADMINISTRATOR.');
INSERT INTO `command` VALUES ('send money', '3', 'Syntax: .send money #playername \"#subject\" \"#text\" #money\r\n\r\nSend mail with money to a player. Subject and mail text must be in \"\".');
INSERT INTO `command` VALUES ('server corpses', '2', 'Syntax: .server corpses\r\n\r\nTriggering corpses expire check in world.');
INSERT INTO `command` VALUES ('server exit', '4', 'Syntax: .server exit\r\n\r\nTerminate trinity-core NOW. Exit code 0.');
INSERT INTO `command` VALUES ('server idlerestart cancel', '3', 'Syntax: .server idlerestart cancel\r\n\r\nCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server idlerestart', '3', 'Syntax: .server idlerestart #delay\r\n\r\nRestart the server after #delay seconds if no active connections are present (no players). Use #exist_code or 2 as program exist code.');
INSERT INTO `command` VALUES ('server idleshutdown cancel', '3', 'Syntax: .server idleshutdown cancel\r\n\r\nCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server idleshutdown', '3', 'Syntax: .server idleshutdown #delay [#exist_code]\r\n\r\nShut the server down after #delay seconds if no active connections are present (no players). Use #exist_code or 0 as program exist code.');
INSERT INTO `command` VALUES ('server info', '0', 'Syntax: .server info\r\n\r\nDisplay server version and the number of connected players.');
INSERT INTO `command` VALUES ('server motd', '0', 'Syntax: .server motd\r\n\r\nShow server Message of the day.');
INSERT INTO `command` VALUES ('server plimit', '3', 'Syntax: .server plimit [#num|-1|-2|-3|reset|player|moderator|gamemaster|administrator]\r\n\r\nWithout arg show current player amount and security level limitations for login to server, with arg set player linit ($num > 0) or securiti limitation ($num < 0 or security leme name. With `reset` sets player limit to the one in the config file');
INSERT INTO `command` VALUES ('server restart cancel', '3', 'Syntax: .server restart cancel\r\n\r\nCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server restart', '3', 'Syntax: .server restart #delay\r\n\r\nRestart the server after #delay seconds. Use #exist_code or 2 as program exist code.');
INSERT INTO `command` VALUES ('server set closed', '3', 'Syntax: server set closed on/off\r\n\r\nSets whether the world accepts new client connectsions.');
INSERT INTO `command` VALUES ('server set loglevel', '4', 'Syntax: .server set loglevel #level\r\n\r\nSet server log level (0 - errors only, 1 - basic, 2 - detail, 3 - debug).');
INSERT INTO `command` VALUES ('server set motd', '3', 'Syntax: .server set motd $MOTD\r\n\r\nSet server Message of the day.');
INSERT INTO `command` VALUES ('server shutdown cancel', '3', 'Syntax: .server shutdown cancel\r\n\r\nCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server shutdown', '3', 'Syntax: .server shutdown #delay [#exit_code]\r\n\r\nShut the server down after #delay seconds. Use #exit_code or 0 as program exit code.');
INSERT INTO `command` VALUES ('server', '3', 'Syntax: .server $subcommand\nType .server to see the list of possible subcommands or .help server $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('setskill', '3', 'Syntax: .setskill #skill #level [#max]\r\n\r\nSet a skill of id #skill with a current skill value of #level and a maximum value of #max (or equal current maximum if not provide) for the selected character. If no character is selected, you learn the skill.');
INSERT INTO `command` VALUES ('showarea', '3', 'Syntax: .showarea #areaid\r\n\r\nReveal the area of #areaid to the selected character. If no character is selected, reveal this area to you.');
INSERT INTO `command` VALUES ('start', '0', 'Syntax: .start\r\n\r\nTeleport you to the starting area of your character.');
INSERT INTO `command` VALUES ('taxicheat', '1', 'Syntax: .taxicheat on/off\r\n\r\nTemporary grant access or remove to all taxi routes for the selected character. If no character is selected, hide or reveal all routes to you.\r\n\r\nVisited taxi nodes sill accessible after removing access.');
INSERT INTO `command` VALUES ('tele add', '3', 'Syntax: .tele add $name\r\n\r\nAdd current your position to .tele command target locations list with name $name.');
INSERT INTO `command` VALUES ('tele del', '3', 'Syntax: .tele del $name\r\n\r\nRemove location with name $name for .tele command locations list.');
INSERT INTO `command` VALUES ('tele group', '1', 'Syntax: .tele group#location\r\n\r\nTeleport a selected player and his group members to a given location.');
INSERT INTO `command` VALUES ('tele name', '1', 'Syntax: .tele name [#playername] #location\r\n\r\nTeleport the given character to a given location. Character can be offline.');
INSERT INTO `command` VALUES ('tele', '1', 'Syntax: .tele #location\r\n\r\nTeleport player to a given location.');
INSERT INTO `command` VALUES ('ticket assign', '1', 'Usage: .ticket assign $ticketid $gmname.\r\nAssigns the specified ticket to the specified Game Master.');
INSERT INTO `command` VALUES ('ticket close', '1', 'Usage: .ticket close $ticketid.\r\nCloses the specified ticket. Does not delete permanently.');
INSERT INTO `command` VALUES ('ticket closedlist', '1', 'Displays a list of closed GM tickets.');
INSERT INTO `command` VALUES ('ticket comment', '1', 'Usage: .ticket comment $ticketid $comment.\r\nAllows the adding or modifying of a comment to the specified ticket.');
INSERT INTO `command` VALUES ('ticket delete', '3', 'Usage: .ticket delete $ticketid.\r\nDeletes the specified ticket permanently. Ticket must be closed first.');
INSERT INTO `command` VALUES ('ticket list', '1', 'Displays a list of open GM tickets.');
INSERT INTO `command` VALUES ('ticket onlinelist', '1', 'Displays a list of open GM tickets whose owner is online.');
INSERT INTO `command` VALUES ('ticket unassign', '1', 'Usage: .ticket unassign $ticketid.\r\nUnassigns the specified ticket from the current assigned Game Master.');
INSERT INTO `command` VALUES ('ticket viewid', '1', 'Usage: .ticket viewid $ticketid.\r\nReturns details about specified ticket. Ticket must be open and not deleted.');
INSERT INTO `command` VALUES ('ticket viewname', '1', 'Usage: .ticket viewname $creatorname. \r\nReturns details about specified ticket. Ticket must be open and not deleted.');
INSERT INTO `command` VALUES ('ticket', '1', 'Syntax: .ticket $subcommand\nType .ticket to see the list of possible subcommands or .help ticket $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('unaura', '3', 'Syntax: .unaura #spellid\r\n\r\nRemove aura due to spell #spellid from the selected Unit.');
INSERT INTO `command` VALUES ('unban account', '3', 'Syntax: .unban account $Name\r\nUnban accounts for account name pattern.');
INSERT INTO `command` VALUES ('unban character', '3', 'Syntax: .unban character $Name\r\nUnban accounts for character name pattern.');
INSERT INTO `command` VALUES ('unban ip', '3', 'Syntax : .unban ip $Ip\r\nUnban accounts for IP pattern.');
INSERT INTO `command` VALUES ('unban', '3', 'Syntax: .unban $subcommand\nType .unban to see the list of possible subcommands or .help unban $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('unbindsight', '3', 'Syntax: .unbindsight\r\n\r\nRemoves bound vision. Cannot be used while currently possessing a target.');
INSERT INTO `command` VALUES ('unfreeze', '1', 'Syntax: .unfreeze (#player)\r\n\"Unfreezes\" #player and enables his chat again. When using this without #name it will unfreeze your target.');
INSERT INTO `command` VALUES ('unlearn', '3', 'Syntax: .unlearn #spell [all]\r\n\r\nUnlearn for selected player a spell #spell.  If \'all\' provided then all ranks unlearned.');
INSERT INTO `command` VALUES ('unmute', '1', 'Syntax: .unmute [$playerName]\r\n\r\nRestore chat messaging for any character from account of character $playerName (or selected). Character can be ofline.');
INSERT INTO `command` VALUES ('unpossess', '3', 'Syntax: .unpossess\r\n\r\nIf you are possessed, unpossesses yourself; otherwise unpossesses current possessed target.');
INSERT INTO `command` VALUES ('waterwalk', '2', 'Syntax: .waterwalk on/off\r\n\r\nSet on/off waterwalk state for selected player or self if no player selected.');
INSERT INTO `command` VALUES ('wchange', '3', 'Syntax: .wchange #weathertype #status\r\n\r\nSet current weather to #weathertype with an intensity of #status.\r\n\r\n#weathertype can be 1 for rain, 2 for snow, and 3 for sand. #status can be 0 for disabled, and 1 for enabled.');
INSERT INTO `command` VALUES ('whispers', '1', 'Syntax: .whispers on|off\r\nEnable/disable accepting whispers by GM from players. By default use trinityd.conf setting.');
INSERT INTO `command` VALUES ('wp event', '2', 'Syntax: .wp event $subcommand\nType .path event to see the list of possible subcommands or .help path event $subcommand to see info on subcommands.');
INSERT INTO `command` VALUES ('wp load', '2', 'Syntax: .wp load $pathid\nLoad pathid number for selected creature. Creature must have no waypoint data.');
INSERT INTO `command` VALUES ('wp show', '2', 'Syntax: .wp show $option\nOptions:\non $pathid (or selected creature with loaded path) - Show path\noff - Hide path\ninfo $slected_waypoint - Show info for selected waypoint.');
INSERT INTO `command` VALUES ('wp unload', '2', 'Syntax: .wp unload\nUnload path for selected creature.');
INSERT INTO `command` VALUES ('account addon', '1', 'Syntax: .account addon #addon\nSet expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk.');
INSERT INTO `command` VALUES ('titles remove', '2', 'Syntax: .titles remove #title\r\nRemove title #title (id or shift-link) from known titles list for selected player.');
INSERT INTO `command` VALUES ('titles current', '2', 'Syntax: .titles current #title\r\nSet title #title (id or shift-link) as current selected titl for selected player. If title not in known title list for player then it will be added to list.');
INSERT INTO `command` VALUES ('titles add', '2', 'Syntax: .titles add #title\r\nAdd title #title (id or shift-link) to known titles list for selected player.');
INSERT INTO `command` VALUES ('titles setmask', '2', 'Syntax: .titles setmask #mask\r\n\r\nAllows user to use all titles from #mask.\r\n\r\n #mask=0 disables the title-choose-field');
INSERT INTO `command` VALUES ('lookup title', '2', 'Syntax: .lookup title $$namepart\r\n\r\nLooks up a title by $namepart, and returns all matches with their title ID\'s and index\'s.');
INSERT INTO `command` VALUES ('channel set public', '3', 'Syntax: .channel set public  $channel $public\r\n\r\nChange password-changing ability for a channel. 1 for possible, 0 for GM only.');
INSERT INTO `command` VALUES ('gobject info', '2', 'Syntax: .gobject info [$object_entry]\r\n\r\nQuery Gameobject information for selected gameobject or given entry.');
INSERT INTO `command` VALUES ('reload creature_template', '3', 'Syntax: .reload creature_template $entry\r\nReload the specified creature\'s template.');
INSERT INTO `command` VALUES ('character deleted delete', '4', 'Syntax: .character deleted delete #guid|$name\r\n\r\nCompletely deletes the selected characters.\r\nIf $name is supplied, only characters with that string in their name will be deleted, if #guid is supplied, only the character with that GUID will be deleted.');
INSERT INTO `command` VALUES ('reload creature_onkill_reputation', '3', 'Syntax: .reload creature_onkill_reputation\r\nReload creature_onkill_reputation table.');
INSERT INTO `command` VALUES ('reload conditions', '3', 'Reload conditions table.');
INSERT INTO `command` VALUES ('reload locales_item_set_name', '3', 'Syntax: .reload locales_item_set_name\nReload locales_item_set_name table.');
INSERT INTO `command` VALUES ('character deleted list', '3', 'Syntax: .character deleted list [#guid|$name]\r\n\r\nShows a list with all deleted characters.\r\nIf $name is supplied, only characters with that string in their name will be selected, if #guid is supplied, only the character with that GUID will be selected.');
INSERT INTO `command` VALUES ('character deleted old', '4', 'Syntax: .character deleted old [#keepDays]\r\n\r\nCompletely deletes all characters with deleted time longer #keepDays. If #keepDays not provided the  used value from mangosd.conf option \'CharDelete.KeepDays\'. If referenced config option disabled (use 0 value) then command can\'t be used without #keepDays.');
INSERT INTO `command` VALUES ('character deleted restore', '3', 'Syntax: .character deleted restore #guid|$name [$newname] [#new account]\r\n\r\nRestores deleted characters.\r\nIf $name is supplied, only characters with that string in their name will be restored, if $guid is supplied, only the character with that GUID will be restored.\r\nIf $newname is set, the character will be restored with that name instead of the original one. If #newaccount is set, the character will be restored to specific account character list. This works only with one character!');
INSERT INTO `command` VALUES ('reload gossip_menu', '3', 'Syntax: .reload gossip_menu\nReload gossip_menu table.');
INSERT INTO `command` VALUES ('reload gossip_menu_option', '3', 'Syntax: .reload gossip_menu_option\nReload gossip_menu_option table.');
INSERT INTO `command` VALUES ('reload gossip_scripts', '3', 'Syntax: .reload gossip_scripts\nReload gossip_scripts table.');
INSERT INTO `command` VALUES ('reload all_gossips', '3', 'Syntax: .reload all_gossips\nReload gossip_menu, gossip_menu_option, gossip_scripts, npc_gossip, points_of_interest tables.');
INSERT INTO `command` VALUES ('reload locales_gossip_menu_option', '3', 'Syntax: .reload locales_gossip_menu_option\nReload locales_gossip_menu_option table.');
INSERT INTO `command` VALUES ('reload quest_poi', '3', 'Syntax: .reload quest_poi\nReload quest_poi table.');
INSERT INTO `command` VALUES ('reload lfg_dungeon_encounters', '3', 'Syntax: .reload lfg_dungeon_encounters\nReload lfg_dungeon_encounters table.');
INSERT INTO `command` VALUES ('reload lfg_dungeon_rewards', '3', 'Syntax: .reload lfg_dungeon_rewards\nReload lfg_dungeon_rewards table.');
INSERT INTO `command` VALUES ('character changefaction', '2', 'Syntax: .character changefaction $name\r\n\r\nChange character faction.');
INSERT INTO `command` VALUES ('character changerace', '2', 'Syntax: .character changerace $name\r\n\r\nChange character race.');
INSERT INTO `command` VALUES ('ban playeraccount', '3', 'Syntax: .ban playeraccount $Name $bantime $reason\nBan account and kick player.\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
